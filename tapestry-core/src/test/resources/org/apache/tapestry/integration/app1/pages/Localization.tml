<html t:type="Border" xmlns:t="http://tapestry.apache.org/schema/tapestry_5_0_0.xsd">
    <h1>Localization</h1>


    <p>Demonstrates a few ways that component message catalogs can be accessed in code and in the
        template.</p>


    <p> Via injected Messages property: [${injectedMessage}] </p>

    <p> Via message: binding prefix: [${message:via-prefix}]</p>
    
  <p> From Application Message Catalog: [${message:app-catalog-status}]</p>
    
    <p> Page locale: [${locale}]</p>
    
    <p> Request locale: [${request.locale}]</p>

	<a t:type="ActionLink" t:id="french">French</a>

	<a t:type="ActionLink" t:id="english">English</a>

<hr/>

    <h2>Fabricated classes:</h2>

    <p> In addition to transforming component classes as they are loaded, Tapestry will create new
        classes out of whole cloth. Although this has nothing to do with Localization, this was a
        handy page to stick these values (because I was curious). </p>


    <dl>
        <dt>IOC Layer: ${iocClassFactory.createdClassCount}</dt>
        <dd> Proxies and interceptors. </dd>

        <dt> Component Layer: ${componentClassFactory.createdClassCount} </dt>
        <dd> For the most part, this is going to be prop: bindings. </dd>
    </dl>



</html>
