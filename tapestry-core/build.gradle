import org.gradle.plugins.ide.idea.model.*
import org.apache.tools.ant.filters.ReplaceTokens
import t5build.*

description = "Central module for Tapestry, containing all core services and components"

project.ext {
    mainGeneratedDir = "src/main/generated"
    testGeneratedDir = "src/test/generated"
    moduleVersions = [
        httpclient: '4.5.14',
    ]
}

clean.delete mainGeneratedDir, testGeneratedDir

dependencies {
    api project(':tapestry-ioc')
    api project(':tapestry-json')
    api project(':beanmodel')
    api project(':tapestry-http')

    implementation libs.jakarta.annotation.api
    implementation libs.jakarta.xml.bind.api

    implementation libs.commons.codec
    implementation libs.commons.lang3

    provided project(":tapestry-test")
    provided project(":tapestry-test-constants")

    provided libs.jakarta.servlet.api

    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit.jupiter

    testImplementation libs.testng
    testImplementation libs.easymock
    testRuntimeOnly libs.slf4j.simple

    testImplementation "org.apache.httpcomponents:httpclient:${moduleVersions.httpclient}"
    testImplementation project(":tapestry-spock")

    testRuntimeOnly("${libs.hsqldb.get().module.group}:${libs.hsqldb.get().module.name}:${libs.hsqldb.get().version}:jdk8")
    testRuntimeOnly libs.guice
}



task preprocessCoffeeScript(type: PreprocessCoffeeScript) {
}

task compileCoffeeScript(type: CompileCoffeeScript) {
    outputDir "${mainGeneratedDir}/compiled-coffeescript"
}

task compileProcessedCoffeescript(type: CompileCoffeeScript) {
    dependsOn preprocessCoffeeScript
    srcDir preprocessCoffeeScript.outputDir
    outputDir "${mainGeneratedDir}/compiled-processed-coffeescript"
}

task compileTestCoffeeScript(type: CompileCoffeeScript) {
    srcDir "src/test/coffeescript"
    outputDir "${testGeneratedDir}/compiled-coffeescript"
}

sourceSets {
    main {
        output.dir(compileCoffeeScript.outputDir, builtBy: compileCoffeeScript)
        output.dir(compileProcessedCoffeescript.outputDir, builtBy: compileProcessedCoffeescript)
    }
    test {
        output.dir(compileTestCoffeeScript.outputDir, builtBy: compileTestCoffeeScript)
    }
}

// Not sure why this is necessary:
compileTestGroovy.dependsOn compileTestJava

test {
    useTestNG()
    // Needed to have XMLTokenStreamTests.testStreamEncoding() passing on Java 9+
    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_1_9)) {
        jvmArgs("--add-opens=java.base/java.nio.charset=ALL-UNNAMED")
    }

    // TAP5-2722
    systemProperty 'user.language', 'en'

    useJUnitPlatform()
    useTestNG {
        def suiteFile = file('src/test/resources/testng.xml')
        if (suiteFile.exists()) {
            suites suiteFile
        }
    }
}

task runTestApp1(type:JavaExec) {
    description 'Start app1 integration test app, useful when debugging failing integration tests'
    main = 'org.apache.tapestry5.test.JettyRunner'
    args "-d", "src/test/app1", "-p", "8080"
    classpath += project.sourceSets.test.runtimeClasspath
}

task runTestApp2(type:JavaExec) {
    description 'Start app2 integration test app, useful when debugging failing integration tests'
    main = 'org.apache.tapestry5.test.JettyRunner'
    args "-d", "src/test/app2", "-p", "8080"
    classpath += project.sourceSets.test.runtimeClasspath
}

task runTestApp3(type:JavaExec) {
    description 'Start app3 integration test app, useful when debugging failing integration tests'
    main = 'org.apache.tapestry5.test.JettyRunner'
    args "-d", "src/test/app3", "-p", "8080"
    classpath += project.sourceSets.test.runtimeClasspath
}

task runTestApp4(type:JavaExec) {
    description 'Start app4 integration test app, useful when debugging failing integration tests'
    main = 'org.apache.tapestry5.test.JettyRunner'
    args "-d", "src/test/app4", "-p", "8080"
    classpath += project.sourceSets.test.runtimeClasspath
}

task runTestApp5(type:JavaExec) {
    description 'Start app5 integration test app, useful when debugging failing integration tests'
    main = 'org.apache.tapestry5.test.JettyRunner'
    args "-d", "src/test/app5", "-p", "8080"
    classpath += project.sourceSets.test.runtimeClasspath
}

task runTestApp7(type:JavaExec) {
    description 'Start app7 integration test app, useful when debugging failing integration tests'
    main = 'org.apache.tapestry5.test.JettyRunner'
    args "-d", "src/test/app7", "-p", "8080"
    classpath += project.sourceSets.test.runtimeClasspath
}

task runTestAppfolder(type:JavaExec) {
    description 'Start appFolder integration test app, useful when debugging failing integration tests'
    main = 'org.apache.tapestry5.test.JettyRunner'
    args "-d", "src/test/appfolder", "-p", "8080"
    classpath += project.sourceSets.test.runtimeClasspath
}

task testWithPrototype(type:Test) {
    systemProperties."tapestry.javascript-infrastructure-provider" = "prototype"
}
