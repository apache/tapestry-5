import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id 'antlr'
}

description = "Central module for Tapestry, containing all core services and components"

project.ext {
  antlrSource = "src/main/antlr"
  antlrOutput = "$buildDir/generated-sources/antlr"
}

sourceSets.main.java.srcDir antlrOutput

configurations {
  compile {
    extendsFrom = extendsFrom.findAll { it != configurations.antlr }
  }
}

dependencies {
  compile project(':tapestry-ioc')
  compile project(':tapestry-json')

  compileOnly project(":tapestry-test")
  compileOnly "javax.servlet:servlet-api:${versions.servletapi}"
  compileOnly "org.easymock:easymock:${versions.easymock}"

  compile "commons-codec:commons-codec:1.15"

  // Transitive will bring in the unwanted string template library as well
  compile "org.antlr:antlr-runtime:3.5.2", { transitive = false }

  // Antlr tool path used with the antlr3 task
  antlr "org.antlr:antlr:3.5.2"

  testCompile "org.testng:testng:${versions.testng}", { transitive = false }
  testCompile "org.easymock:easymock:${versions.easymock}"
  testCompile project(":tapestry-test")
  testRuntime "org.hsqldb:hsqldb:2.2.8"
}

compileJava.options.fork(memoryMaximumSize: '512m')
// compileJava.dependsOn generateGrammarSource

jar {
  from("src/main/filtered-resources") {
    filter(ReplaceTokens, tokens: [version: project.version])
  }
}
