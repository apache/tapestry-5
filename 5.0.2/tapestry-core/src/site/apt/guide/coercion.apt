 ----
 Parameter Type Coercions
 ----
 
Parameter Type Coercions

  Tapestry automatically handles type coercions for parameters.
  
  Type coercions occur when a value passed into a parameter (as bound in template or
  in an annoation) does not match the type of the parameter.
  
  For example, consider the Count component:
  
+---+
public class Count
{
    @Parameter
    private int _start = 1;

    @Parameter(required = true)
    private int _end;

    @Parameter
    private int _value;
    
    . . .
+---+

  Here, the type of all three parameters is int.
  
  However, it is likely that the component will be used as so:
  
+---+
  Merry Christmas: <t:comp type="Count" end="3"> Ho! </t:comp>
+---+

  A bare whole number is interpreted by the prop binding prefix as a long. So this is the <long> value 3.
  
  Tapestry will automatically coerce the bound value, a long, to the parameter's type, int. This may be a lossy coercion (if the long represents a number larger
  than can be stored in an int).
  
TypeCoercer Service

  The tapestry.ioc.TypeCoercer service
  is responsible for this type coercion. This service is part of the tapestry-ioc module, and 
  is {{{http://tapestry.apache.org/tapestry5/tapestry-ioc/coerce.html}documented there}}.  The service
  is quite extensible, allowing for new types and coercions to be added easily.
  
  
                