[versions]

# LOGGING

slf4j = "2.0.17"

# JAKARTA

jakarta-annotation-api  = "2.0.0"
jakarta-inject-api      = "2.0.1"
jakarta-persistence-api = "3.0.0"
jakarta-servlet-api     = "5.0.0"
jakarta-validation-api  = "3.0.2"
jakarta-xml-bind-api    = "2.3.2"

# APACHE COMMONS

commons-cli        = "1.10.0"
commons-codec      = "1.19.0"
commons-httpclient = "4.5.14"
commons-io         = "2.20.0"
commons-lang3      = "3.18.0"
commons-logging    = "1.3.5"
commons-text       = "1.14.0"

# DATABASE

hibernate           = "5.4.32.Final"
hibernate-validator = "8.0.1.Final"

hsqldb = "2.7.4"

# ANTLR

antlr = "3.5.3"

# MISC

json = "20250517"
xml-apis = "1.4.01"
groovy = "4.0.28"
ant-jsch = "1.10.15"
guava = "27.0.1-jre"
jackson = "2.20.0"
clojure = "1.12.2"

# TESTING

junit5 = "5.13.4"
junit4 = "4.13.2"

testng   = "7.5.1"
easymock = "5.6.0"

spock = "2.3-groovy-4.0"
geb   = "2.0"

webdrivermanager = "5.5.2"
selenium         = "4.5.0"
selenium-java    = "4.12.1"
selenium-server  = "4.12.1"

# QUICKSTART

quickstart-spring-boot    = "3.1.3"
quickstart-json           = "1.1.4"
quickstart-log4j          = "2.17.2"
quickstart-yasson         = "2.0.4"
quickstart-maven-compiler = "3.8.1"
quickstart-maven-surefire = "3.1"
quickstart-maven-war      = "3.3.1"
quickstart-maven-jetty    = "11.0.15"
quickstart-gretty         = "3.0.6"


[libraries]

# LOGGING

slf4j-api     = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-log4j12 = { module = "org.slf4j:slf4j-log4j12", version.ref = "slf4j" }

# JAKARTA

jakarta-annotation-api  = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation-api" }
jakarta-inject-api      = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject-api" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence-api" }
jakarta-servlet-api     = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakarta-servlet-api" }
jakarta-validation-api  = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta-validation-api" }
jakarta-xml-bind-api    = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version.ref = "jakarta-xml-bind-api" }

# APACHE COMMONS

commons-cli        = { module = "commons-cli:commons-cli", version.ref = "commons-cli" }
commons-codec      = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }
commons-httpclient = { module = "org.apache.httpcomponents:httpclient", version.ref = "commons-httpclient" }
commons-io         = { module = "commons-io:commons-io", version.ref = "commons-io" }
commons-lang3      = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
commons-logging    = { module = "commons-logging:commons-logging", version.ref = "commons-logging" }
commons-text       = { module = "org.apache.commons:commons-text", version.ref = "commons-text" }

# HIBERNATE

hibernate-core      = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
hibernate-validator = { module = "org.hibernate:hibernate-validator", version.ref = "hibernate-validator" }

hsqldb = { module = "org.hsqldb:hsqldb", version.ref = "hsqldb" }

# ANTLR

antlr = { module = "org.antlr:antlr", version.ref = "antlr" }
antlr-runtime = { module = "org.antlr:antlr-runtime", version.ref = "antlr" }

# MISC

json = { module = "org.json:json", version.ref = "json" }
xml-apis = { module = "xml-apis:xml-apis", version.ref = "xml-apis" }
ant-jsch = { module = "org.apache.ant:ant-jsch", version.ref = "ant-jsch" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
clojure = { module = "org.clojure:clojure", version.ref = "clojure" }

# GROOVY

groovy-core = { module = "org.apache.groovy:groovy", version.ref = "groovy" }
groovy-json = { module = "org.apache.groovy:groovy-json", version.ref = "groovy" }
groovy-nio  = { module = "org.apache.groovy:groovy-nio", version.ref = "groovy" }

# JACKSON

jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }

# TESTING

slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

junit-bom               = { module = "org.junit:junit-bom", version.ref = "junit5" }
junit-jupiter           = { module = "org.junit.jupiter:junit-jupiter"}
junit-jupiter-api       = { module = "org.junit.jupiter:junit-jupiter-api" }
junit-jupiter-params    = { module = "org.junit.jupiter:junit-jupiter-params" }
junit-jupiter-engine    = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }

junit4 = { module = "junit:junit", version.ref = "junit4" }

testng = { module = "org.testng:testng", version.ref = "testng" }

easymock = { module = "org.easymock:easymock", version.ref = "easymock" }

spock-bom  = { module = "org.spockframework:spock-bom", version.ref = "spock" }
spock-core = { module = "org.spockframework:spock-core" }

geb-spock = { module = "org.gebish:geb-spock", version.ref = "geb" }

selenium-legrc  = { module = "org.seleniumhq.selenium:selenium-leg-rc", version.ref = "selenium" }
selenium-api    = { module = "org.seleniumhq.selenium:selenium-api", version.ref = "selenium" }
selenium-java   = { module = "org.seleniumhq.selenium:selenium-java", version.ref = "selenium-java" }
selenium-server = { module = "org.seleniumhq.selenium:selenium-server", version.ref = "selenium-server" }

webdrivermanager = { module = "io.github.bonigarcia:webdrivermanager", version.ref = "webdrivermanager" }


[bundles]

groovy = [
    "groovy-core",
    "groovy-json",
    "groovy-nio"
]

junit-jupiter-essentials = [
    "junit-jupiter-api",
    "junit-jupiter-params"
]
