import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

task copyGradleWrapper(type: Copy) {
    ext.srcDir = file("$buildDir/wrapper")

    inputs.dir srcDir
    outputs.dir file("$buildDir/resources/main/archetype-resources")

    from srcDir
    into file("$buildDir/resources/main/archetype-resources")

    exclude '.gradle'
}

task addGradleWrapper(type: Exec) {
    workingDir "$buildDir/wrapper"
    commandLine "${rootProject.projectDir}/gradlew", 'wrapper', '--gradle-version', '8.14.2'

    standardOutput = new ByteArrayOutputStream()

    ext.output = {
        return standardOutput.toString()
    }

    doFirst {
        def wrapperDirectory = new File(buildDir, 'wrapper')
        wrapperDirectory.mkdirs()

        def settings = new File(wrapperDirectory, 'settings.gradle')
        new FileOutputStream(settings).close()
    }

    finalizedBy 'copyGradleWrapper'
}

task addWrappers(dependsOn: [addGradleWrapper]) {
}

task processFiltered(type: Copy) {
    ext.srcDir = file('src/main/resources-filtered')

    inputs.dir srcDir
    outputs.dir sourceSets.main.output.resourcesDir

    from srcDir
    into sourceSets.main.output.resourcesDir

    filter(FixCrLfFilter)
    filter(ReplaceTokens, tokens: [
        quickstartVersion: project.parent.version,
        tapestryVersion: project.parent.version,
        springBootVersion: libs.versions.quickstart.spring.boot.get(),
        junitVersion: libs.versions.junit5.get(),
        jacksonVersion: libs.versions.jackson.get(),
        jsonVersion: libs.versions.quickstart.json.get(),
        log4jVersion: libs.versions.quickstart.log4j.get(),
        yassonVersion: libs.versions.quickstart.yasson.get(),
        servletVersion: libs.versions.jakarta.servlet.api.get(),
        mavenCompilerVersion: libs.versions.quickstart.maven.compiler.get(),
        mavenSurefireVersion: libs.versions.quickstart.maven.surefire.get(),
        mavenWarVersion: libs.versions.quickstart.maven.war.get(),
        mavenJettyVersion: libs.versions.quickstart.maven.jetty.get(),
        grettyVersion: libs.versions.quickstart.gretty.get()
    ])
}

processResources.dependsOn([addWrappers, processFiltered])

jar {
    dependsOn(copyGradleWrapper)
}
