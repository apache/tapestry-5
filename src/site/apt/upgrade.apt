 ----
 Upgrade Notes
 ----

Upgrade Notes

  This is a quick guide to changes since Tapestry 5.0.  This is meant to provide information
  on any additions or changes that developers will face after upgrading from Tapestry 5.0 to Tapestry 5.1, or from one
  5.1 snapshot release to another.

  It is always advised to perform a full and complete build after upgrading.

  You should also check the {{{release-notes.html}project-wide release notes}} for information
  about bugs fixes and other improvements.

Release 5.1.0.0

* Performance Improvements

  As part of the changes related to
  {{{https://issues.apache.org/jira/browse/TAP5-417}TAP5-417: Tapestry 5.0 Performance Improvements}},
  you should be aware that Tapestry will now optimize the render phase state machine.
  This is only relevant to advanced users who have written a ComponentClassTransformWorker
  that adds logic to a render phase: it is necessary to
  {{{apidocs/org/apache/tapestry5/model/MutableComponentModel.html#addRenderPhase(Class)}inform
  Tapestry that the render phase should be invoked}}.

* Tapestry/Spring

  There have been some significant changes to the {{{tapestry-spring/}tapestry-spring}} module, to
  support injection of Tapestry services into Springbeans.

* Session Persisted Objects

  Tapestry is now more aggressive about automatically re-storing any session persisted object
  back into the session at the end of the request (this used to only apply to application state objects).  See the 
  {{{guide/persist.html}persistent page data}} notes for more details.

* Module Classes

  Many questionable practices in Tapestry module classes that used to produce warnings
  have been changed to fail early with exceptions. The rationale is that the warnings would be ignored,
  resulting in more difficult to diagnose runtime errors. 

  Extra public methods on module classes (methods that do not define services, contribute to services,
  or decorate or advise services) are now errors.

* Asset interface

  The {{{apidocs/org/apache/tapestry5/Asset.html}Asset}} interface has been changed incompatibly:
  A new method, isInvariant(), has been added. This will only affect applications that have provided
  their own implementations of Asset.


